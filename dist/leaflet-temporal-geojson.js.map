{"version":3,"file":"leaflet-temporal-geojson.js","sources":["../src/js/L.TemporalGeoJSONLayer.js"],"sourcesContent":["\n\nconst TemporalGeoJSONLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n\t/*------------------------------------ LEAFLET SPECIFIC ------------------------------------------*/\n\n\t_active: false,\n\t_map: null,\n\t// the DOM leaflet-pane that contains our layer\n\t_pane: null,\n\t_paneName: 'overlayPane',\n\n\t// just inherit leaflet defaults?\n\t_defaultStyle: {},\n\n\t// user options\n\toptions: {\n\t\tfeatures: [],\n\t\tframeKey: null,\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\t/**\n\t * @param map {Object} Leaflet map\n\t */\n\tonAdd: function (map) {\n\t\tthis._active = true;\n\t\tthis._map = map;\n\t\tthis._frameKey = null;\n\t\tif (!this.options.rendererFactory) this.options.rendererFactory = L.canvas;\n\t\tthis._setPane();\n\t\tthis._createFrames();\n\t\tif (this.options.onAdd) this.options.onAdd();\n\t},\n\n\t/**\n\t * Remove the pane from DOM, and void pane when layer removed from map\n\t */\n\tonRemove() {\n\t\tconst currentFrame = this._frameLayers[this._frameKey];\n\t\tif (currentFrame) this._map.removeLayer(currentFrame);\n\t\tthis._active = false;\n\t\tif (this.options.onRemove) this.options.onRemove();\n\t},\n\n\t/*------------------------------------ PUBLIC ------------------------------------------*/\n\n\t/**\n\t * check if the particle layer is currently active on the map\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this._active;\n\t},\n\n\t/**\n\t * Get the current frame key\n\t * @returns {string} the keyframe time\n\t */\n\tgetFrame() {\n\t\tif (!this.isActive()) return -1;\n\t\treturn this._frameKey;\n\t},\n\n\t/**\n\t * Get ascending array of available frame keys\n\t * @returns {array} the keyframe time ISO strings\n\t */\n\tgetFrameKeys() {\n\t\treturn this._times.slice();\n\t},\n\n\t/**\n\t * Display the frame at the given frame key\n\t * @param key {string} the keyframe time\n\t */\n\tsetFrame(key) {\n\t\tif (!this.isActive()) return;\n\n\t\tconst prevFrame = this._frameLayers[this._frameKey];\n\t\tif (prevFrame) this._map.removeLayer(prevFrame);\n\t\t\n\t\tthis._frameKey = key;\n\t\tconst nextFrame = this._frameLayers[this._frameKey];\n\t\tif(nextFrame) this._map.addLayer(nextFrame);\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\t/**\n\t * Build keyframes from geojson features.\n\t */\n\t_createFrames() {\n\t\tconst features = this.options.features;\n\n\t\t// get sorted list of dates\n\t\tconst dates = features.map(f => new Date(f.properties[this.options.timeKey])).sort((a,b) => a - b );\n\t\t// uniq list of ISO strings\n\t\tthis._times = [...new Set(dates.map(d => d.toISOString()))]; \n\n\t\tthis._frameLayers = {};\n\t\tconst that = this;\n\t\tconst renderer = this.options.rendererFactory({ pane: this._paneName });\n\n\t\tconst circleMarkerOptions = this.options.circleMarkerOptions || {}; \n\t\tcircleMarkerOptions.renderer = renderer;\n\n\t\tthis._times.forEach(time => {\n\t\t\tconst slicedFeatures = features.filter(f => f.properties[this.options.timeKey] === time);\n\t\t\tconst featureCollection = {\t\n\t\t\t\ttype: 'FeatureCollection',\n\t\t\t\tfeatures: slicedFeatures\n\t\t\t};\n\t\t\t\n\t\t\tconst layer = L.geoJSON(featureCollection, {\n\t\t\t\tpointToLayer(geoJsonPoint, latlng) {\n\t\t\t\t\treturn L.circleMarker(latlng, circleMarkerOptions);\n\t\t\t\t},\n\t\t\t\tstyle(feature) {\n\t\t\t\t\tif (!that.options.style) {\n\t\t\t\t\t\treturn that._defaultStyle;\n\t\t\t\t\t}\n\t\t\t\t\treturn that.options.style(feature);\n\t\t\t\t},\n\t\t\t\trenderer: renderer\n\t\t\t});\n\n\t\t\tthis._frameLayers[time] = layer;\n\t\t});\n\t},\n\n\t/**\n\t * Create custom pane if necessary\n\t * @private\n\t */\n\t_setPane() {\n\t\t// determine where to add the layer\n\t\tthis._paneName = this.options.paneName || 'overlayPane';\n\n\t\t// fall back to overlayPane for leaflet < 1\n\t\tlet pane = this._map._panes.overlayPane\n\t\tif (this._map.getPane) {\n\t\t\t// attempt to get pane first to preserve parent (createPane voids this)\n\t\t\tpane = this._map.getPane(this._paneName);\n\t\t\tif (!pane) {\n\t\t\t\tpane = this._map.createPane(this._paneName);\n\t\t\t}\n\t\t}\n\n\t\tthis._pane = pane;\n\t},\n\n\t/**\n\t * Deep merge Objects,\n\t * Note that destination arrays will be overwritten where they exist in source.\n\t * @param destination\n\t * @param source\n\t * @returns {*}\n\t */\n\t_extendObject(destination, source) {\n\t\tlet self = this;\n\t\tfor (const property in source) {\n\t\t\t// .constructor avoids tripping over prototypes etc.\n\t\t\t// don't traverse the data..\n\t\t\tif (property === 'data') {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t} else if (source[property] && source[property].constructor && source[property].constructor === Object) {\n\t\t\t\tdestination[property] = destination[property] || {};\n\t\t\t\tself._extendObject(destination[property], source[property]);\n\t\t\t} else {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t}\n\n});\n\nL.temporalGeoJSONLayer = function (options) {\n\treturn new TemporalGeoJSONLayer(options);\n};\n\nexport default L.temporalGeoJSONLayer;\n\n\n"],"names":["TemporalGeoJSONLayer","L","Layer","Class","extend","_active","_map","_pane","_paneName","_defaultStyle","options","features","frameKey","initialize","setOptions","onAdd","map","_frameKey","rendererFactory","canvas","_setPane","_createFrames","onRemove","currentFrame","_frameLayers","removeLayer","isActive","getFrame","getFrameKeys","_times","slice","setFrame","key","prevFrame","nextFrame","addLayer","dates","f","Date","properties","timeKey","sort","a","b","Set","d","toISOString","that","renderer","pane","circleMarkerOptions","forEach","time","slicedFeatures","filter","featureCollection","type","layer","geoJSON","pointToLayer","geoJsonPoint","latlng","circleMarker","style","feature","paneName","_panes","overlayPane","getPane","createPane","_extendObject","destination","source","self","property","constructor","Object","temporalGeoJSONLayer"],"mappings":"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"}