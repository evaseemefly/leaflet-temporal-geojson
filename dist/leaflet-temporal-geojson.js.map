{"version":3,"file":"leaflet-temporal-geojson.js","sources":["../src/js/L.TemporalGeoJSONLayer.js"],"sourcesContent":["\n\nconst TemporalGeoJSONLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n\t/*------------------------------------ LEAFLET SPECIFIC ------------------------------------------*/\n\n\t_active: false,\n\t_map: null,\n\t_renderer: null,\n\t// the DOM leaflet-pane that contains our layer\n\t_pane: null,\n\t_paneName: 'overlayPane',\n\n\t// just inherit leaflet defaults?\n\t_defaultStyle: {},\n\n\t// user options\n\toptions: {\n\t\tfeatures: [],\n\t\tframeKey: null,\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\t/**\n\t * @param map {Object} Leaflet map\n\t */\n\tonAdd: function (map) {\n\t\tthis._active = true;\n\t\tthis._map = map;\n\t\tthis._frameKey = null;\n\t\tif (!this.options.rendererFactory) this.options.rendererFactory = L.canvas;\n\t\tthis._setPane();\n\t\tthis._createFrames();\n\t\tif (this.options.onAdd) this.options.onAdd();\n\t},\n\n\t/**\n\t * Remove the pane from DOM, and void pane when layer removed from map\n\t */\n\tonRemove() {\n\t\tconst currentFrame = this._frameLayers[this._frameKey];\n\t\tif (currentFrame) this._map.removeLayer(currentFrame);\n\t\tthis._active = false;\n\t\tif (this.options.onRemove) this.options.onRemove();\n\t},\n\n\t/*------------------------------------ PUBLIC ------------------------------------------*/\n\n\t/**\n\t * check if the particle layer is currently active on the map\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this._active;\n\t},\n\n\t/**\n\t * Get the current frame key\n\t * @returns {string} the keyframe time\n\t */\n\tgetFrame() {\n\t\tif (!this.isActive()) return -1;\n\t\treturn this._frameKey;\n\t},\n\n\t/**\n\t * Get ascending array of available frame keys\n\t * @returns {array} the keyframe time ISO strings\n\t */\n\tgetFrameKeys() {\n\t\treturn this._times.slice();\n\t},\n\n\t/**\n\t * Display the frame at the given frame key\n\t * @param key {string} the keyframe time\n\t */\n\tsetFrame(key) {\n\t\tif (!this.isActive()) return;\n\n\t\t// clear existing\n\t\tconst prevFrame = this._frameLayers[this._frameKey];\n\t\tif (prevFrame) this._map.removeLayer(prevFrame);\n\t\t\n\t\t// set new if we have target\n\t\tthis._frameKey = key;\n\t\tconst nextFrame = this._frameLayers[this._frameKey];\n\t\tif(nextFrame) this._map.addLayer(nextFrame);\n\t},\n\n\t/**\n\t * Changes styles of GeoJSON vector layers with the given style function\n\t * @param {function} style \n\t */\n\tsetStyle(style) {\n\t\t// clear any current keyframe\n\t\tconst staleFrame = this._frameLayers[this._frameKey];\n\t\tif (staleFrame) this._map.removeLayer(staleFrame);\n\n\t\t// use default style if none provided\n\t\tif (!style) style = (feature) => { return this._defaultStyle };\n\t\t\n\t\t// re-init each frame with style\n\t\tthis._times.forEach(time => {\n\t\t\tconst slicedFeatures = this.options.features.filter(f => f.properties[this.options.timeKey] === time);\n\t\t\tconst featureCollection = {\ttype: 'FeatureCollection', features: slicedFeatures };\n\t\t\tconst layer = this._createFrameLayer(featureCollection, this._renderer, style);\n\t\t\tthis._frameLayers[time] = layer;\n\t\t});\n\n\t\t// restore frame with new style\n\t\tif (staleFrame) this.setFrame(this._frameKey);\n\t},\n\n\t/**\n\t * Returns L.latLngBounds at the supplied time,\n\t * if time omited, it returns bounds of the **current** keyframe layer,\n\t * and if no frame is active - returns bounds of the **first** keyframe\n\t */\n\tgetBounds(time) {\n\t\tif (time === undefined && this._frameKey) {\n\t\t\ttime = this._frameKey;\n\t\t} else if (index === undefined) {\n\t\t\ttime = this._times[0];\n\t\t}\n\t\tconst layer = this._frameLayers[time];\n\t\treturn layer.getBounds();\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\t/**\n\t * Build keyframes from geojson features.\n\t */\n\t_createFrames() {\n\t\tconst features = this.options.features;\n\n\t\t// get sorted list of dates\n\t\tconst dates = features.map(f => new Date(f.properties[this.options.timeKey])).sort((a,b) => a - b );\n\t\t\n\t\t// uniq list of ISO strings\n\t\tthis._times = [...new Set(dates.map(d => d.toISOString()))]; \n\t\tthis._frameLayers = {};\n\t\tthis._renderer = this.options.rendererFactory({ pane: this._paneName });\n\t\t\n\t\tconst that = this;\n\t\tthis._times.forEach(time => {\n\t\t\tconst slicedFeatures = features.filter(f => f.properties[this.options.timeKey] === time);\n\t\t\tconst featureCollection = {\ttype: 'FeatureCollection', features: slicedFeatures };\n\t\t\tlet style = () => { return that._defaultStyle; };\n\t\t\tif (that.options.style) style = that.options.style\n\t\t\t\n\t\t\tconst layer = this._createFrameLayer(featureCollection, this._renderer, style);\n\t\t\tthis._frameLayers[time] = layer;\n\t\t});\n\t},\n\n\t/**\n\t * Create a L.geoJSON layer for the keyframe\n\t * @param {object} featureCollection \n\t * @param {object} renderer - L.renderer\n\t * @param {function} style \n\t */\n\t_createFrameLayer(featureCollection, renderer, style) {\n\t\tconst circleMarkerOptions = this.options.circleMarkerOptions || {}; \n\t\tcircleMarkerOptions.renderer = renderer;\n\n\t\tconst frameLayer = L.geoJSON(featureCollection, {\n\t\t\tpointToLayer(geoJsonPoint, latlng) {\n\t\t\t\treturn L.circleMarker(latlng, circleMarkerOptions);\n\t\t\t},\n\t\t\tstyle,\n\t\t\trenderer\n\t\t});\n\t\t\n\t\tif (this.options.popupFunction) frameLayer.bindPopup(this.options.popupFunction);\n\t\treturn frameLayer;\n\t},\n\n\t/**\n\t * Create custom pane if necessary\n\t * @private\n\t */\n\t_setPane() {\n\t\t// determine where to add the layer\n\t\tthis._paneName = this.options.paneName || 'overlayPane';\n\n\t\t// fall back to overlayPane for leaflet < 1\n\t\tlet pane = this._map._panes.overlayPane\n\t\tif (this._map.getPane) {\n\t\t\t// attempt to get pane first to preserve parent (createPane voids this)\n\t\t\tpane = this._map.getPane(this._paneName);\n\t\t\tif (!pane) {\n\t\t\t\tpane = this._map.createPane(this._paneName);\n\t\t\t}\n\t\t}\n\n\t\tthis._pane = pane;\n\t},\n\n\t/**\n\t * Deep merge Objects,\n\t * Note that destination arrays will be overwritten where they exist in source.\n\t * @param destination\n\t * @param source\n\t * @returns {*}\n\t */\n\t_extendObject(destination, source) {\n\t\tlet self = this;\n\t\tfor (const property in source) {\n\t\t\t// .constructor avoids tripping over prototypes etc.\n\t\t\t// don't traverse the data..\n\t\t\tif (property === 'data') {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t} else if (source[property] && source[property].constructor && source[property].constructor === Object) {\n\t\t\t\tdestination[property] = destination[property] || {};\n\t\t\t\tself._extendObject(destination[property], source[property]);\n\t\t\t} else {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t}\n\n});\n\nL.temporalGeoJSONLayer = function (options) {\n\treturn new TemporalGeoJSONLayer(options);\n};\n\nexport default L.temporalGeoJSONLayer;\n\n\n"],"names":["TemporalGeoJSONLayer","L","Layer","Class","extend","_active","_map","_renderer","_pane","_paneName","_defaultStyle","options","features","frameKey","initialize","setOptions","onAdd","map","_frameKey","rendererFactory","canvas","_setPane","_createFrames","onRemove","currentFrame","_frameLayers","removeLayer","isActive","getFrame","getFrameKeys","_times","slice","setFrame","key","prevFrame","nextFrame","addLayer","setStyle","style","staleFrame","feature","forEach","time","slicedFeatures","filter","f","properties","timeKey","featureCollection","type","layer","_createFrameLayer","getBounds","undefined","index","dates","Date","sort","a","b","Set","d","toISOString","pane","that","renderer","circleMarkerOptions","frameLayer","geoJSON","pointToLayer","geoJsonPoint","latlng","circleMarker","popupFunction","bindPopup","paneName","_panes","overlayPane","getPane","createPane","_extendObject","destination","source","self","property","constructor","Object","temporalGeoJSONLayer"],"mappings":"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"}