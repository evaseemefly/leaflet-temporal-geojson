{"version":3,"file":"leaflet-temporal-geojson.js","sources":["../src/js/L.TemporalGeoJSONLayer.js"],"sourcesContent":["\n\nconst TemporalGeoJSONLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n\t/*------------------------------------ LEAFLET SPECIFIC ------------------------------------------*/\n\n\t_active: false,\n\t_map: null,\n\t// the DOM leaflet-pane that contains our layer\n\t_pane: null,\n\t_paneName: 'overlayPane',\n\n\t// just inherit leaflet defaults?\n\t_defaultStyle: {},\n\n\t// user options\n\toptions: {\n\t\tfeatures: [],\n\t\tframeKey: null,\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\t/**\n\t * @param map {Object} Leaflet map\n\t */\n\tonAdd: function (map) {\n\t\tthis._active = true;\n\t\tthis._map = map;\n\t\tthis._frameKey = null;\n\t\tthis._setPane();\n\t\tthis._createFrames();\n\t\tif (this.options.onAdd) this.options.onAdd();\n\t},\n\n\t/**\n\t * Remove the pane from DOM, and void pane when layer removed from map\n\t */\n\tonRemove() {\n\t\tconst currentFrame = this._frameLayers[this._frameKey];\n\t\tif (currentFrame) this._map.removeLayer(currentFrame);\n\t\tthis._active = false;\n\t\tif (this.options.onRemove) this.options.onRemove();\n\t},\n\n\t/*------------------------------------ PUBLIC ------------------------------------------*/\n\n\t/**\n\t * check if the particle layer is currently active on the map\n\t * @returns {boolean}\n\t */\n\tisActive() {\n\t\treturn this._active;\n\t},\n\n\t/**\n\t * Get the current frame key\n\t * @returns {string} the keyframe time\n\t */\n\tgetFrame() {\n\t\tif (!this.isActive()) return -1;\n\t\treturn this._frameKey;\n\t},\n\n\t/**\n\t * Get ascending array of available frame keys\n\t * @returns {array} the keyframe time ISO strings\n\t */\n\tgetFrameKeys() {\n\t\treturn this._times.slice();\n\t},\n\n\t/**\n\t * Display the frame at the given frame key\n\t * @param key {string} the keyframe time\n\t */\n\tsetFrame(key) {\n\t\tif (!this.isActive()) return;\n\n\t\tif (this._frameKey !== null) {\n\t\t\tthis._map.removeLayer(this._frameLayers[this._frameKey]);\n\t\t}\n\n\t\tthis._frameKey = key;\n\t\tthis._map.addLayer(this._frameLayers[this._frameKey]);\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\t/**\n\t * Build keyframes from geojson features.\n\t */\n\t_createFrames() {\n\t\tconst features = this.options.features;\n\n\t\t// get sorted list of dates\n\t\tconst dates = features.map(f => new Date(f.properties[this.options.timeKey])).sort((a,b) => a - b );\n\t\t// uniq list of ISO strings\n\t\tthis._times = [...new Set(dates.map(d => d.toISOString()))]; \n\n\t\tthis._frameLayers = {};\n\t\tconst that = this;\n\t\tconst renderer = L.canvas({ pane: this._paneName });\n\n\t\tconst circleMarkerOptions = this.options.circleMarkerOptions || {}; \n\t\tcircleMarkerOptions.renderer = renderer;\n\n\t\tthis._times.forEach(time => {\n\t\t\tconst slicedFeatures = features.filter(f => f.properties[this.options.timeKey] === time);\n\t\t\tconst featureCollection = {\t\n\t\t\t\ttype: 'FeatureCollection',\n\t\t\t\tfeatures: slicedFeatures\n\t\t\t};\n\t\t\t\n\t\t\tconst layer = L.geoJSON(featureCollection, {\n\t\t\t\tpointToLayer(geoJsonPoint, latlng) {\n\t\t\t\t\treturn L.circleMarker(latlng, circleMarkerOptions);\n\t\t\t\t},\n\t\t\t\tstyle(feature) {\n\t\t\t\t\tif (!that.options.featureStyle) {\n\t\t\t\t\t\treturn that._defaultStyle;\n\t\t\t\t\t}\n\t\t\t\t\treturn that.options.featureStyle(feature);\n\t\t\t\t},\n\t\t\t\trenderer: renderer\n\t\t\t});\n\n\t\t\tthis._frameLayers[time] = layer;\n\t\t});\n\t},\n\n\t/**\n\t * Create custom pane if necessary\n\t * @private\n\t */\n\t_setPane() {\n\t\t// determine where to add the layer\n\t\tthis._paneName = this.options.paneName || 'overlayPane';\n\n\t\t// fall back to overlayPane for leaflet < 1\n\t\tlet pane = this._map._panes.overlayPane\n\t\tif (this._map.getPane) {\n\t\t\t// attempt to get pane first to preserve parent (createPane voids this)\n\t\t\tpane = this._map.getPane(this._paneName);\n\t\t\tif (!pane) {\n\t\t\t\tpane = this._map.createPane(this._paneName);\n\t\t\t}\n\t\t}\n\n\t\tthis._pane = pane;\n\t},\n\n\t/**\n\t * Deep merge Objects,\n\t * Note that destination arrays will be overwritten where they exist in source.\n\t * @param destination\n\t * @param source\n\t * @returns {*}\n\t */\n\t_extendObject(destination, source) {\n\t\tlet self = this;\n\t\tfor (const property in source) {\n\t\t\t// .constructor avoids tripping over prototypes etc.\n\t\t\t// don't traverse the data..\n\t\t\tif (property === 'data') {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t} else if (source[property] && source[property].constructor && source[property].constructor === Object) {\n\t\t\t\tdestination[property] = destination[property] || {};\n\t\t\t\tself._extendObject(destination[property], source[property]);\n\t\t\t} else {\n\t\t\t\tdestination[property] = source[property];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t}\n\n});\n\nL.temporalGeoJSONLayer = function (options) {\n\treturn new TemporalGeoJSONLayer(options);\n};\n\nexport default L.temporalGeoJSONLayer;\n\n\n"],"names":["TemporalGeoJSONLayer","L","Layer","Class","extend","_active","_map","_pane","_paneName","_defaultStyle","options","features","frameKey","initialize","setOptions","onAdd","map","_frameKey","_setPane","_createFrames","onRemove","currentFrame","_frameLayers","removeLayer","isActive","getFrame","getFrameKeys","_times","slice","setFrame","key","addLayer","dates","f","Date","properties","timeKey","sort","a","b","Set","d","toISOString","that","renderer","canvas","pane","circleMarkerOptions","forEach","time","slicedFeatures","filter","featureCollection","type","layer","geoJSON","pointToLayer","geoJsonPoint","latlng","circleMarker","style","feature","featureStyle","paneName","_panes","overlayPane","getPane","createPane","_extendObject","destination","source","self","property","constructor","Object","temporalGeoJSONLayer"],"mappings":";;;;;;CAEA,MAAMA,uBAAuB,CAACC,EAAEC,KAAF,GAAUD,EAAEC,KAAZ,GAAoBD,EAAEE,KAAvB,EAA8BC,MAA9B,CAAqC;;CAEjE;;CAEAC,UAAS,KAJwD;CAKjEC,OAAM,IAL2D;CAMjE;CACAC,QAAO,IAP0D;CAQjEC,YAAW,aARsD;;CAUjE;CACAC,gBAAe,EAXkD;;CAajE;CACAC,UAAS;CACRC,YAAU,EADF;CAERC,YAAU;CAFF,EAdwD;;CAmBjEC,aAAY,UAAUH,OAAV,EAAmB;CAC9BT,IAAEa,UAAF,CAAa,IAAb,EAAmBJ,OAAnB;CACA,EArBgE;;CAuBjE;;;CAGAK,QAAO,UAAUC,GAAV,EAAe;CACrB,OAAKX,OAAL,GAAe,IAAf;CACA,OAAKC,IAAL,GAAYU,GAAZ;CACA,OAAKC,SAAL,GAAiB,IAAjB;CACA,OAAKC,QAAL;CACA,OAAKC,aAAL;CACA,MAAI,KAAKT,OAAL,CAAaK,KAAjB,EAAwB,KAAKL,OAAL,CAAaK,KAAb;CACxB,EAjCgE;;CAmCjE;;;CAGAK,YAAW;CACV,QAAMC,eAAe,KAAKC,YAAL,CAAkB,KAAKL,SAAvB,CAArB;CACA,MAAII,YAAJ,EAAkB,KAAKf,IAAL,CAAUiB,WAAV,CAAsBF,YAAtB;CAClB,OAAKhB,OAAL,GAAe,KAAf;CACA,MAAI,KAAKK,OAAL,CAAaU,QAAjB,EAA2B,KAAKV,OAAL,CAAaU,QAAb;CAC3B,EA3CgE;;CA6CjE;;CAEA;;;;CAIAI,YAAW;CACV,SAAO,KAAKnB,OAAZ;CACA,EArDgE;;CAuDjE;;;;CAIAoB,YAAW;CACV,MAAI,CAAC,KAAKD,QAAL,EAAL,EAAsB,OAAO,CAAC,CAAR;CACtB,SAAO,KAAKP,SAAZ;CACA,EA9DgE;;CAgEjE;;;;CAIAS,gBAAe;CACd,SAAO,KAAKC,MAAL,CAAYC,KAAZ,EAAP;CACA,EAtEgE;;CAwEjE;;;;CAIAC,UAASC,GAAT,EAAc;CACb,MAAI,CAAC,KAAKN,QAAL,EAAL,EAAsB;;CAEtB,MAAI,KAAKP,SAAL,KAAmB,IAAvB,EAA6B;CAC5B,QAAKX,IAAL,CAAUiB,WAAV,CAAsB,KAAKD,YAAL,CAAkB,KAAKL,SAAvB,CAAtB;CACA;;CAED,OAAKA,SAAL,GAAiBa,GAAjB;CACA,OAAKxB,IAAL,CAAUyB,QAAV,CAAmB,KAAKT,YAAL,CAAkB,KAAKL,SAAvB,CAAnB;CACA,EArFgE;;CAuFjE;;CAEA;;;CAGAE,iBAAgB;CACf,QAAMR,WAAW,KAAKD,OAAL,CAAaC,QAA9B;;CAEA;CACA,QAAMqB,QAAQrB,SAASK,GAAT,CAAaiB,KAAK,IAAIC,IAAJ,CAASD,EAAEE,UAAF,CAAa,KAAKzB,OAAL,CAAa0B,OAA1B,CAAT,CAAlB,EAAgEC,IAAhE,CAAqE,CAACC,CAAD,EAAGC,CAAH,KAASD,IAAIC,CAAlF,CAAd;CACA;CACA,OAAKZ,MAAL,GAAc,CAAC,GAAG,IAAIa,GAAJ,CAAQR,MAAMhB,GAAN,CAAUyB,KAAKA,EAAEC,WAAF,EAAf,CAAR,CAAJ,CAAd;;CAEA,OAAKpB,YAAL,GAAoB,EAApB;CACA,QAAMqB,OAAO,IAAb;CACA,QAAMC,WAAW3C,EAAE4C,MAAF,CAAS,EAAEC,MAAM,KAAKtC,SAAb,EAAT,CAAjB;;CAEA,QAAMuC,sBAAsB,KAAKrC,OAAL,CAAaqC,mBAAb,IAAoC,EAAhE;CACAA,sBAAoBH,QAApB,GAA+BA,QAA/B;;CAEA,OAAKjB,MAAL,CAAYqB,OAAZ,CAAoBC,QAAQ;CAC3B,SAAMC,iBAAiBvC,SAASwC,MAAT,CAAgBlB,KAAKA,EAAEE,UAAF,CAAa,KAAKzB,OAAL,CAAa0B,OAA1B,MAAuCa,IAA5D,CAAvB;CACA,SAAMG,oBAAoB;CACzBC,UAAM,mBADmB;CAEzB1C,cAAUuC;CAFe,IAA1B;;CAKA,SAAMI,QAAQrD,EAAEsD,OAAF,CAAUH,iBAAV,EAA6B;CAC1CI,iBAAaC,YAAb,EAA2BC,MAA3B,EAAmC;CAClC,YAAOzD,EAAE0D,YAAF,CAAeD,MAAf,EAAuBX,mBAAvB,CAAP;CACA,KAHyC;CAI1Ca,UAAMC,OAAN,EAAe;CACd,SAAI,CAAClB,KAAKjC,OAAL,CAAaoD,YAAlB,EAAgC;CAC/B,aAAOnB,KAAKlC,aAAZ;CACA;CACD,YAAOkC,KAAKjC,OAAL,CAAaoD,YAAb,CAA0BD,OAA1B,CAAP;CACA,KATyC;CAU1CjB,cAAUA;CAVgC,IAA7B,CAAd;;CAaA,QAAKtB,YAAL,CAAkB2B,IAAlB,IAA0BK,KAA1B;CACA,GArBD;CAsBA,EAjIgE;;CAmIjE;;;;CAIApC,YAAW;CACV;CACA,OAAKV,SAAL,GAAiB,KAAKE,OAAL,CAAaqD,QAAb,IAAyB,aAA1C;;CAEA;CACA,MAAIjB,OAAO,KAAKxC,IAAL,CAAU0D,MAAV,CAAiBC,WAA5B;CACA,MAAI,KAAK3D,IAAL,CAAU4D,OAAd,EAAuB;CACtB;CACApB,UAAO,KAAKxC,IAAL,CAAU4D,OAAV,CAAkB,KAAK1D,SAAvB,CAAP;CACA,OAAI,CAACsC,IAAL,EAAW;CACVA,WAAO,KAAKxC,IAAL,CAAU6D,UAAV,CAAqB,KAAK3D,SAA1B,CAAP;CACA;CACD;;CAED,OAAKD,KAAL,GAAauC,IAAb;CACA,EAtJgE;;CAwJjE;;;;;;;CAOAsB,eAAcC,WAAd,EAA2BC,MAA3B,EAAmC;CAClC,MAAIC,OAAO,IAAX;CACA,OAAK,MAAMC,QAAX,IAAuBF,MAAvB,EAA+B;CAC9B;CACA;CACA,OAAIE,aAAa,MAAjB,EAAyB;CACxBH,gBAAYG,QAAZ,IAAwBF,OAAOE,QAAP,CAAxB;CACA,IAFD,MAEO,IAAIF,OAAOE,QAAP,KAAoBF,OAAOE,QAAP,EAAiBC,WAArC,IAAoDH,OAAOE,QAAP,EAAiBC,WAAjB,KAAiCC,MAAzF,EAAiG;CACvGL,gBAAYG,QAAZ,IAAwBH,YAAYG,QAAZ,KAAyB,EAAjD;CACAD,SAAKH,aAAL,CAAmBC,YAAYG,QAAZ,CAAnB,EAA0CF,OAAOE,QAAP,CAA1C;CACA,IAHM,MAGA;CACNH,gBAAYG,QAAZ,IAAwBF,OAAOE,QAAP,CAAxB;CACA;CACD;CACD,SAAOH,WAAP;CACA;;CA9KgE,CAArC,CAA7B;;CAkLApE,EAAE0E,oBAAF,GAAyB,UAAUjE,OAAV,EAAmB;CAC3C,QAAO,IAAIV,oBAAJ,CAAyBU,OAAzB,CAAP;CACA,CAFD;;AAIA,8BAAeT,EAAE0E,oBAAjB;;;;;;;;"}